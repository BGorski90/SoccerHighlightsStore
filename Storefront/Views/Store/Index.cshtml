@model SearchViewModel
@using PagedList.Mvc
@using Common.Extensions
@using Common.Infrastructure

@*@{
        Layout = null;
    }*@

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Styles/Store.css" rel="stylesheet" />
    @*<script src="~/Scripts/jquery.cookie-1.4.1.min.js"></script>*@
    <title>Index</title>
</head>
<body class="body-content">
    <h1 align="center"><a href="~/Store/Index"> Welcome to our soccer highlights store! </a> </h1>
    <h2> Find your favourite team</h2> <br />

    <div id="user">
        @if (Request.IsAuthenticated)
        {
            Html.RenderPartial("~/Views/Account/UserPartial.cshtml");
        }
        else
        {
            Html.RenderPartial("~/Views/Account/LoginPartial.cshtml", new LoginViewModel());
        }
    </div>
    <br /><br />
    <div id="options">
        @Html.ActionLink("View your cart", "CheckCart", "Cart", null, new { @class = "btn btn-default" })
        @using (Html.BeginForm("Index", "Store", FormMethod.Get))
        {

            <br /> @Html.TextBoxFor(model => model.SearchContent) <br />
            @Html.ValidationMessageFor(m => Model.SearchContent, "", new { @class = "text-danger" }) <br />
            <input type="submit" class="btn btn-default" value="Search" />
            @:Choose category: &emsp;
            @Html.DropDownListFor(model => model.Category, new[]
                    {
                        new SelectListItem{ Text = "All", Value = "All", Selected = true},
                        new SelectListItem{ Text = "Premier League", Value = "Premier League"},
                        new SelectListItem{ Text = "Primera Division", Value = "Primera Division"},
                        new SelectListItem{ Text = "Serie A", Value = "Serie A"}
                    })
            @:Clips per page: &emsp;
            @Html.DropDownListFor(model => model.ClipsPerPage, new[]
                    {
                        new SelectListItem{ Text = "10", Value = "10", Selected = true},
                        new SelectListItem{ Text = "20", Value = "20"},
                        new SelectListItem{ Text = "50", Value = "50"}
                    })
            @:Order by: &emsp;
            @Html.DropDownListFor(model => model.SortBy, new[]
                    {
                        new SelectListItem{ Text = "Price", Value = "Price"},
                        new SelectListItem{ Text = "Length", Value = "Length"},
                        new SelectListItem{ Text = "Added", Value = "Added", Selected = true}
                    })
            @:Sort direction: &emsp;
            @Html.DropDownListFor(model => model.SortDirection, new[]
                    {
                        new SelectListItem{ Text = "Ascending", Value = "Ascending"},
                        new SelectListItem{ Text = "Descending", Value = "Descending", Selected = true},
                    })
            <input type="hidden" name="page" value="1" />
            @Html.PagedListPager(Model.Videos, pageNumber => Url.Action("Index",
               new
               {
                   category = Model.Category,
                   searchContent = Model.SearchContent,
                   sortBy = Model.SortBy,
                   sortDirection = Model.SortDirection,
                   clipsPerPage = Model.ClipsPerPage,
                   page = pageNumber
               }
            ), new PagedListRenderOptions { DisplayItemSliceAndTotal = true, Display = PagedListDisplayMode.IfNeeded })
        }
    </div>
    <br />
    <div id="videos">
        @if (!Model.Videos.Any())
        {
            <h3>
                Sorry, no videos found!!
            </h3>
        }
        else
        {
            foreach (var item in Model.Videos)
            {
                Html.RenderPartial("VideoPartial", item);
                var cart = Model.Cart;
                var isInCart = cart != null && cart.Contains(item.VideoID);
                @Html.SubmitButton(isInCart ? "Remove from cart" : "Add to cart", new { @class = isInCart ? "btn-removecart" : "btn-addcart", id = "cartButton-" + item.VideoID, });
                @:&emsp;&emsp;
            if (Request.IsAuthenticated)
                {
                    var wishlist = Model.Wishlist;
                    var isInWishlist = wishlist != null && wishlist.Contains(item.VideoID);
                    @Html.SubmitButton(isInWishlist ? "Remove from wishlist" : "Add to wishlist", new { @class = isInWishlist ? "btn-removewishlist" : "btn-addwishlist", id = "wishlistButton-" + item.VideoID, });
                }
                @*@Html.ActionLink("Buy now", "Checkout", "Order", new { @class = "btn-primary" })*@
            }
        }
    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.btn-addcart, .btn-removecart').click(function () {
                var vid = this.attr('id').toString();
                var id = vid.substring(vid.indexOf('-') + 1);
                //var cart = $.parseJSON($.cookie("Cart"));
                //if (cart !== "")
                //    cart["Videos"].push("," + id)
                //else {
                var url = '/Cart/ToggleCart';
                $.post(url, { videoID: id },
                    switchCartButton(id)
                )
            });
            $('.btn-addwishlist, .btn-removewishlist').click(function () {
                var url = '/Wishlist/ToggleWishlist';
                var vid = this.attr('id').toString();
                var id = vid.substring(vid.indexOf('-') + 1);
                $.post(url, { videoID: id },
                    switchWishlistButton(id)
                )
            })
        });
        function switchCartButton(id) {
            var element = $('#' + id);
            var buttonClass = element.attr('class');
            if (buttonClass == 'btn-addcart') {
                element.attr('class', 'btn-removecart');
                element.attr('value', 'Remove from cart');
            }
            else {
                element.attr('class', 'btn-addcart');
                element.attr('value', 'Add to cart');
            }
        }

        function switchWishlistButton(id) {
            var element = $('#' + id);
            var buttonClass = element.attr('class');
            if (buttonClass == 'btn-addwishlist') {
                element.attr('class', 'btn-removewishlist');
                element.attr('value', 'Remove from wishlist');
            }
            else {
                element.attr('class', 'btn-addwishlist');
                element.attr('value', 'Add to wishlist');
            }
        }
    </script>
</body>
</html>
